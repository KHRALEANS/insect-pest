{"env_info": "sys.platform: linux\nPython: 3.8.10 (default, Jun  4 2021, 15:09:15) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1,2,3: Tesla P40\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.1, V11.1.105\nGCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0\nPyTorch: 1.8.1+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v1.7.0 (Git Hash 7aed236906b1f7a05c0917e5257a1af05e9ff683)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.8.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.9.1+cu111\nOpenCV: 4.5.5\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.24.0+", "config": "optimizer = dict(\n    type='SGD',\n    lr=0.00625,\n    momentum=0.9,\n    weight_decay=0.0005,\n    nesterov=True,\n    paramwise_cfg=dict(norm_decay_mult=0.0, bias_decay_mult=0.0))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='YOLOX',\n    warmup='exp',\n    by_epoch=False,\n    warmup_by_epoch=True,\n    warmup_ratio=1,\n    warmup_iters=5,\n    num_last_epochs=15,\n    min_lr_ratio=0.05)\nrunner = dict(type='EpochBasedRunner', max_epochs=250)\ncheckpoint_config = dict(interval=10)\nlog_config = dict(interval=5, hooks=[dict(type='TextLoggerHook')])\ncustom_hooks = [\n    dict(type='YOLOXModeSwitchHook', num_last_epochs=15, priority=48),\n    dict(type='SyncNormHook', num_last_epochs=15, interval=10, priority=48),\n    dict(\n        type='ExpMomentumEMAHook',\n        resume_from=None,\n        momentum=0.0001,\n        priority=49)\n]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/epoch_60.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\nauto_scale_lr = dict(enable=False, base_batch_size=64)\nimg_scale = (1280, 1280)\nmodel = dict(\n    type='YOLOX',\n    input_size=(1280, 1280),\n    random_size_range=(15, 25),\n    random_size_interval=10,\n    backbone=dict(type='CSPDarknet', deepen_factor=0.33, widen_factor=0.5),\n    neck=dict(\n        type='YOLOXPAFPN',\n        in_channels=[128, 256, 512],\n        out_channels=128,\n        num_csp_blocks=1),\n    bbox_head=dict(\n        type='YOLOXHead', num_classes=29, in_channels=128, feat_channels=128),\n    train_cfg=dict(assigner=dict(type='SimOTAAssigner', center_radius=2.5)),\n    test_cfg=dict(score_thr=0.01, nms=dict(type='nms', iou_threshold=0.65)))\ndata_root = 'data/pest-coco/AUG/'\ndataset_type = 'CocoDataset'\nclasses = ('\u65e0', '\u4e8c\u5316\u879f', '\u4e8c\u70b9\u59d4\u591c\u86fe', '\u68c9\u94c3\u866b', '\u8910\u98de\u8671\u5c5e', '\u767d\u80cc\u98de\u8671', '\u516b\u70b9\u7070\u706f\u86fe', '\u877c\u86c4', '\u87cb\u87c0',\n           '\u751c\u83dc\u591c\u86fe', '\u9ec4\u8db3\u730e\u877d', '\u7a3b\u7eb5\u5377\u53f6\u879f', '\u751c\u83dc\u767d\u5e26\u91ce\u879f', '\u9ec4\u6bd2\u86fe', '\u77f3\u86fe', '\u5927\u9ed1\u9cc3\u91d1\u9f9f', '\u7c98\u866b',\n           '\u7a3b\u879f\u86c9', '\u7518\u84dd\u591c\u86fe', '\u5730\u8001\u864e', '\u5927\u879f', '\u74dc\u7ee2\u91ce\u879f', '\u7ebf\u59d4\u591c\u86fe', '\u6c34\u879f\u86fe', '\u7d2b\u6761\u5c3a\u86fe', '\u6b67\u89d2\u879f',\n           '\u8349\u5730\u879f', '\u8c46\u91ce\u879f', '\u5e72\u7eb9\u51ac\u591c\u86fe')\ntrain_pipeline = [\n    dict(type='Mosaic', img_scale=(1280, 1280), pad_val=114.0),\n    dict(\n        type='RandomAffine', scaling_ratio_range=(0.1, 2),\n        border=(-640, -640)),\n    dict(\n        type='MixUp',\n        img_scale=(1280, 1280),\n        ratio_range=(0.8, 1.6),\n        pad_val=114.0),\n    dict(type='YOLOXHSVRandomAug'),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(type='Resize', img_scale=(1280, 1280), keep_ratio=True),\n    dict(\n        type='Pad',\n        pad_to_square=True,\n        pad_val=dict(img=(114.0, 114.0, 114.0))),\n    dict(type='FilterAnnotations', min_gt_bbox_wh=(1, 1), keep_empty=False),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n]\ntrain_dataset = dict(\n    type='MultiImageMixDataset',\n    dataset=dict(\n        type='CocoDataset',\n        classes=('\u65e0', '\u4e8c\u5316\u879f', '\u4e8c\u70b9\u59d4\u591c\u86fe', '\u68c9\u94c3\u866b', '\u8910\u98de\u8671\u5c5e', '\u767d\u80cc\u98de\u8671', '\u516b\u70b9\u7070\u706f\u86fe', '\u877c\u86c4',\n                 '\u87cb\u87c0', '\u751c\u83dc\u591c\u86fe', '\u9ec4\u8db3\u730e\u877d', '\u7a3b\u7eb5\u5377\u53f6\u879f', '\u751c\u83dc\u767d\u5e26\u91ce\u879f', '\u9ec4\u6bd2\u86fe', '\u77f3\u86fe', '\u5927\u9ed1\u9cc3\u91d1\u9f9f',\n                 '\u7c98\u866b', '\u7a3b\u879f\u86c9', '\u7518\u84dd\u591c\u86fe', '\u5730\u8001\u864e', '\u5927\u879f', '\u74dc\u7ee2\u91ce\u879f', '\u7ebf\u59d4\u591c\u86fe', '\u6c34\u879f\u86fe',\n                 '\u7d2b\u6761\u5c3a\u86fe', '\u6b67\u89d2\u879f', '\u8349\u5730\u879f', '\u8c46\u91ce\u879f', '\u5e72\u7eb9\u51ac\u591c\u86fe'),\n        ann_file='data/pest-coco/AUG/annotations/train_labels.json',\n        img_prefix='data/pest-coco/AUG/train/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True)\n        ],\n        filter_empty_gt=False),\n    pipeline=[\n        dict(type='Mosaic', img_scale=(1280, 1280), pad_val=114.0),\n        dict(\n            type='RandomAffine',\n            scaling_ratio_range=(0.1, 2),\n            border=(-640, -640)),\n        dict(\n            type='MixUp',\n            img_scale=(1280, 1280),\n            ratio_range=(0.8, 1.6),\n            pad_val=114.0),\n        dict(type='YOLOXHSVRandomAug'),\n        dict(type='RandomFlip', flip_ratio=0.5),\n        dict(type='Resize', img_scale=(1280, 1280), keep_ratio=True),\n        dict(\n            type='Pad',\n            pad_to_square=True,\n            pad_val=dict(img=(114.0, 114.0, 114.0))),\n        dict(\n            type='FilterAnnotations', min_gt_bbox_wh=(1, 1), keep_empty=False),\n        dict(type='DefaultFormatBundle'),\n        dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n    ])\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1280, 1280),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Pad',\n                pad_to_square=True,\n                pad_val=dict(img=(114.0, 114.0, 114.0))),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=10,\n    workers_per_gpu=8,\n    persistent_workers=True,\n    train=dict(\n        type='MultiImageMixDataset',\n        dataset=dict(\n            type='CocoDataset',\n            classes=('\u65e0', '\u4e8c\u5316\u879f', '\u4e8c\u70b9\u59d4\u591c\u86fe', '\u68c9\u94c3\u866b', '\u8910\u98de\u8671\u5c5e', '\u767d\u80cc\u98de\u8671', '\u516b\u70b9\u7070\u706f\u86fe', '\u877c\u86c4',\n                     '\u87cb\u87c0', '\u751c\u83dc\u591c\u86fe', '\u9ec4\u8db3\u730e\u877d', '\u7a3b\u7eb5\u5377\u53f6\u879f', '\u751c\u83dc\u767d\u5e26\u91ce\u879f', '\u9ec4\u6bd2\u86fe', '\u77f3\u86fe',\n                     '\u5927\u9ed1\u9cc3\u91d1\u9f9f', '\u7c98\u866b', '\u7a3b\u879f\u86c9', '\u7518\u84dd\u591c\u86fe', '\u5730\u8001\u864e', '\u5927\u879f', '\u74dc\u7ee2\u91ce\u879f', '\u7ebf\u59d4\u591c\u86fe',\n                     '\u6c34\u879f\u86fe', '\u7d2b\u6761\u5c3a\u86fe', '\u6b67\u89d2\u879f', '\u8349\u5730\u879f', '\u8c46\u91ce\u879f', '\u5e72\u7eb9\u51ac\u591c\u86fe'),\n            ann_file='data/pest-coco/AUG/annotations/train_labels.json',\n            img_prefix='data/pest-coco/AUG/train/',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True)\n            ],\n            filter_empty_gt=False),\n        pipeline=[\n            dict(type='Mosaic', img_scale=(1280, 1280), pad_val=114.0),\n            dict(\n                type='RandomAffine',\n                scaling_ratio_range=(0.1, 2),\n                border=(-640, -640)),\n            dict(\n                type='MixUp',\n                img_scale=(1280, 1280),\n                ratio_range=(0.8, 1.6),\n                pad_val=114.0),\n            dict(type='YOLOXHSVRandomAug'),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(type='Resize', img_scale=(1280, 1280), keep_ratio=True),\n            dict(\n                type='Pad',\n                pad_to_square=True,\n                pad_val=dict(img=(114.0, 114.0, 114.0))),\n            dict(\n                type='FilterAnnotations',\n                min_gt_bbox_wh=(1, 1),\n                keep_empty=False),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        classes=('\u65e0', '\u4e8c\u5316\u879f', '\u4e8c\u70b9\u59d4\u591c\u86fe', '\u68c9\u94c3\u866b', '\u8910\u98de\u8671\u5c5e', '\u767d\u80cc\u98de\u8671', '\u516b\u70b9\u7070\u706f\u86fe', '\u877c\u86c4',\n                 '\u87cb\u87c0', '\u751c\u83dc\u591c\u86fe', '\u9ec4\u8db3\u730e\u877d', '\u7a3b\u7eb5\u5377\u53f6\u879f', '\u751c\u83dc\u767d\u5e26\u91ce\u879f', '\u9ec4\u6bd2\u86fe', '\u77f3\u86fe', '\u5927\u9ed1\u9cc3\u91d1\u9f9f',\n                 '\u7c98\u866b', '\u7a3b\u879f\u86c9', '\u7518\u84dd\u591c\u86fe', '\u5730\u8001\u864e', '\u5927\u879f', '\u74dc\u7ee2\u91ce\u879f', '\u7ebf\u59d4\u591c\u86fe', '\u6c34\u879f\u86fe',\n                 '\u7d2b\u6761\u5c3a\u86fe', '\u6b67\u89d2\u879f', '\u8349\u5730\u879f', '\u8c46\u91ce\u879f', '\u5e72\u7eb9\u51ac\u591c\u86fe'),\n        ann_file='data/pest-coco/AUG/annotations/val_labels.json',\n        img_prefix='data/pest-coco/AUG/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1280, 1280),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Pad',\n                        pad_to_square=True,\n                        pad_val=dict(img=(114.0, 114.0, 114.0))),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        classes=('\u65e0', '\u4e8c\u5316\u879f', '\u4e8c\u70b9\u59d4\u591c\u86fe', '\u68c9\u94c3\u866b', '\u8910\u98de\u8671\u5c5e', '\u767d\u80cc\u98de\u8671', '\u516b\u70b9\u7070\u706f\u86fe', '\u877c\u86c4',\n                 '\u87cb\u87c0', '\u751c\u83dc\u591c\u86fe', '\u9ec4\u8db3\u730e\u877d', '\u7a3b\u7eb5\u5377\u53f6\u879f', '\u751c\u83dc\u767d\u5e26\u91ce\u879f', '\u9ec4\u6bd2\u86fe', '\u77f3\u86fe', '\u5927\u9ed1\u9cc3\u91d1\u9f9f',\n                 '\u7c98\u866b', '\u7a3b\u879f\u86c9', '\u7518\u84dd\u591c\u86fe', '\u5730\u8001\u864e', '\u5927\u879f', '\u74dc\u7ee2\u91ce\u879f', '\u7ebf\u59d4\u591c\u86fe', '\u6c34\u879f\u86fe',\n                 '\u7d2b\u6761\u5c3a\u86fe', '\u6b67\u89d2\u879f', '\u8349\u5730\u879f', '\u8c46\u91ce\u879f', '\u5e72\u7eb9\u51ac\u591c\u86fe'),\n        ann_file='data/pest-coco/AUG/annotations/val_labels.json',\n        img_prefix='data/pest-coco/AUG/val/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1280, 1280),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Pad',\n                        pad_to_square=True,\n                        pad_val=dict(img=(114.0, 114.0, 114.0))),\n                    dict(type='DefaultFormatBundle'),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nmax_epochs = 250\nnum_last_epochs = 15\ninterval = 10\nevaluation = dict(\n    save_best='auto', interval=1, dynamic_intervals=[(235, 1)], metric='bbox')\nwork_dir = './work_dirs/my_yolox_v7_pre70_200e'\nauto_resume = False\ngpu_ids = range(0, 4)\n", "seed": 0, "exp_name": "my_yolox_v7_pre70_200e.py", "hook_msgs": {}}
{"mode": "train", "epoch": 1, "iter": 5, "lr": 0.0, "memory": 19593, "data_time": 5.84503, "loss_cls": 2.84653, "loss_bbox": 1.99885, "loss_obj": 4.27049, "loss": 9.11587, "time": 7.16599}
{"mode": "train", "epoch": 1, "iter": 10, "lr": 1e-05, "memory": 19593, "data_time": 1.97821, "loss_cls": 2.67692, "loss_bbox": 2.01755, "loss_obj": 4.45311, "loss": 9.14758, "time": 3.35562}
{"mode": "train", "epoch": 1, "iter": 15, "lr": 3e-05, "memory": 19593, "data_time": 0.07291, "loss_cls": 2.01255, "loss_bbox": 1.61341, "loss_obj": 2.58822, "loss": 6.21418, "time": 0.60617}
